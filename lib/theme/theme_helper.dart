import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.indigo5005,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(13.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.red800,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(6.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.gray10010,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 18.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 13.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.black90005,
          fontSize: 12.fSize,
          fontFamily: 'Rubik',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.red800,
          fontSize: 44.fSize,
          fontFamily: 'Proxima Nova Alt',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 34.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black90005,
          fontSize: 24.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 12.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.black90005,
          fontSize: 11.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 9.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.black90005,
          fontSize: 20.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.black90005,
          fontSize: 16.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray50003,
          fontSize: 14.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF064782),
    primaryContainer: Color(0XFF0C0C0C),
    secondaryContainer: Color(0X51064782),

    // Error colors
    errorContainer: Color(0XFF1D232F),
    onError: Color(0XFF553803),
    onErrorContainer: Color(0XFFFBC088),

    // On colors(text colors)
    onPrimary: Color(0XFF030303),
    onPrimaryContainer: Color(0XFF626262),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF0E1111);
  Color get black90001 => Color(0XFF111010);
  Color get black90002 => Color(0XFF0D0D0D);
  Color get black90003 => Color(0XFF0D0E0F);
  Color get black90004 => Color(0XFF0B0000);
  Color get black90005 => Color(0XFF000000);

  // Blue
  Color get blue300 => Color(0XFF6EC6EA);
  Color get blue30001 => Color(0XFF5FACCF);
  Color get blue30033 => Color(0X3372BBFF);
  Color get blue50 => Color(0XFFE9F2F9);
  Color get blue500 => Color(0XFF148FFF);
  Color get blue700 => Color(0XFF006BD9);
  Color get blue70001 => Color(0XFF2578C5);
  Color get blue70002 => Color(0XFF236DCB);
  Color get blue800 => Color(0XFF1960B2);
  Color get blue900 => Color(0XFF1558AC);
  Color get blue90001 => Color(0XFF1658AC);

  // BlueGray
  Color get blueGray100 => Color(0XFFCDD6DD);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray10002 => Color(0XFFCCCCCC);
  Color get blueGray10003 => Color(0XFFD4D4E1);
  Color get blueGray10004 => Color(0XFFD4D4D4);
  Color get blueGray200 => Color(0XFFA6AFBC);
  Color get blueGray20001 => Color(0XFFACB7C3);
  Color get blueGray20002 => Color(0XFFB5BECD);
  Color get blueGray300 => Color(0XFF98A7B5);
  Color get blueGray30001 => Color(0XFF9BA7AD);
  Color get blueGray400 => Color(0XFF76869A);
  Color get blueGray40001 => Color(0XFF7F919D);
  Color get blueGray40002 => Color(0XFF888888);
  Color get blueGray50 => Color(0XFFEEEEF2);
  Color get blueGray500 => Color(0XFF6D7885);
  Color get blueGray50001 => Color(0XFF417996);
  Color get blueGray50002 => Color(0XFF737F8A);
  Color get blueGray50003 => Color(0XFF68778F);
  Color get blueGray50004 => Color(0XFF687890);
  Color get blueGray50005 => Color(0XFF4988A6);
  Color get blueGray5001 => Color(0XFFECEFF1);
  Color get blueGray600 => Color(0XFF616F75);
  Color get blueGray700 => Color(0XFF4A4C60);
  Color get blueGray70001 => Color(0XFF484F57);
  Color get blueGray70002 => Color(0XFF525A6C);
  Color get blueGray70003 => Color(0XFF525B69);
  Color get blueGray70004 => Color(0XFF494C60);
  Color get blueGray70005 => Color(0XFF4D5157);
  Color get blueGray70006 => Color(0XFF4B5879);
  Color get blueGray800 => Color(0XFF40444E);
  Color get blueGray900 => Color(0XFF2D3343);
  Color get blueGray90001 => Color(0XFF24363A);
  Color get blueGray90002 => Color(0XFF252D2D);
  Color get blueGray90003 => Color(0XFF2E2D2D);
  Color get blueGray90004 => Color(0XFF323940);
  Color get blueGray90005 => Color(0XFF323639);

  // Cyan
  Color get cyan700 => Color(0XFF1591AC);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFF7EBE3);
  Color get deepOrange5001 => Color(0XFFF4DFDE);
  Color get deepOrangeA100 => Color(0XFFE4AC78);

  // Gray
  Color get gray100 => Color(0XFFF1F5F5);
  Color get gray10001 => Color(0XFFF4F5F6);
  Color get gray10002 => Color(0XFFF7F7F7);
  Color get gray10003 => Color(0XFFF5F5F5);
  Color get gray10004 => Color(0XFFF3F4F6);
  Color get gray10005 => Color(0XFFF6F6F6);
  Color get gray10006 => Color(0XFFF3F3F3);
  Color get gray10007 => Color(0XFFF5F7FA);
  Color get gray10008 => Color(0XFFF4F4F4);
  Color get gray10009 => Color(0XFFF3F6FB);
  Color get gray10010 => Color(0XFFF2EEF7);
  Color get gray10011 => Color(0XFFF6F7F9);
  Color get gray10012 => Color(0XFFF2EEF6);
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray20001 => Color(0XFFE7E9EC);
  Color get gray20002 => Color(0XFFEFEFEF);
  Color get gray20003 => Color(0XFFE9E8E7);
  Color get gray20004 => Color(0XFFEAEAEA);
  Color get gray300 => Color(0XFFE2E5EB);
  Color get gray30001 => Color(0XFFE1E1E1);
  Color get gray30002 => Color(0XFFD9E2EF);
  Color get gray30003 => Color(0XFFDAE6E9);
  Color get gray30004 => Color(0XFFDBDBDB);
  Color get gray30005 => Color(0XFFE5E5E5);
  Color get gray400 => Color(0XFFC1C1C1);
  Color get gray40001 => Color(0XFFB7B6B5);
  Color get gray50 => Color(0XFFF8F8F9);
  Color get gray500 => Color(0XFF8F908F);
  Color get gray50001 => Color(0XFF979797);
  Color get gray50002 => Color(0XFF9A9DA0);
  Color get gray5001 => Color(0XFFFCFCFC);
  Color get gray5002 => Color(0XFFF9F9F9);
  Color get gray600 => Color(0XFF69707A);
  Color get gray60001 => Color(0XFF9E7855);
  Color get gray60002 => Color(0XFF727272);
  Color get gray60003 => Color(0XFF8D6B4D);
  Color get gray60004 => Color(0XFF787878);
  Color get gray60005 => Color(0XFF757575);
  Color get gray700 => Color(0XFF5F676C);
  Color get gray70001 => Color(0XFF58636A);
  Color get gray70002 => Color(0XFF555555);
  Color get gray70003 => Color(0XFF696969);
  Color get gray70004 => Color(0XFF5E5E5E);
  Color get gray70005 => Color(0XFF5E666C);
  Color get gray70006 => Color(0XFF565656);
  Color get gray800 => Color(0XFF3E3E3E);
  Color get gray80001 => Color(0XFF43474C);
  Color get gray80002 => Color(0XFF3D3A40);
  Color get gray80003 => Color(0XFF3D3A44);
  Color get gray80004 => Color(0XFF44474A);
  Color get gray900 => Color(0XFF121C1B);
  Color get gray90001 => Color(0XFF232323);
  Color get gray90002 => Color(0XFF1C2527);
  Color get gray90003 => Color(0XFF121212);
  Color get gray90004 => Color(0XFF191A2C);
  Color get gray90005 => Color(0XFF1E1C1B);
  Color get gray90006 => Color(0XFF161515);
  Color get gray90007 => Color(0XFF19161D);
  Color get gray90008 => Color(0XFF131312);
  Color get gray90009 => Color(0XFF231F20);
  Color get gray90010 => Color(0XFF1B1C1C);
  Color get gray90011 => Color(0XFF1E262A);
  Color get gray90012 => Color(0XFF151515);
  Color get gray90013 => Color(0XFF24272B);
  Color get gray90014 => Color(0XFF2A2928);
  Color get gray90015 => Color(0XFF0A142C);
  Color get gray90016 => Color(0XFF232121);
  Color get gray90017 => Color(0XFF262424);
  Color get gray90019 => Color(0X19161616);
  Color get gray90075 => Color(0X7505113A);

  // Green
  Color get green400 => Color(0XFF5F9F62);
  Color get green600 => Color(0XFF3BB33D);
  Color get green700 => Color(0XFF369E3D);
  Color get green70001 => Color(0XFF259337);
  Color get green70002 => Color(0XFF318D3B);
  Color get green70003 => Color(0XFF249336);
  Color get green800 => Color(0XFF2D7B36);
  Color get green80001 => Color(0XFF296D31);
  Color get green900 => Color(0XFF245628);
  Color get green90001 => Color(0XFF265F2C);

  // Indigo
  Color get indigo100 => Color(0XFFBDCEE0);
  Color get indigo10001 => Color(0XFFBCC8DD);
  Color get indigo10002 => Color(0XFFC9D0E9);
  Color get indigo200 => Color(0XFF9FB0C8);
  Color get indigo300 => Color(0XFF6C8CB5);
  Color get indigo50 => Color(0XFFEAF0F8);
  Color get indigo5001 => Color(0XFFDDE4F2);
  Color get indigo5002 => Color(0XFFDDE5F3);
  Color get indigo5003 => Color(0XFFDFE6F0);
  Color get indigo5004 => Color(0XFFE3EBF7);
  Color get indigo5005 => Color(0XFFEBF0F8);
  Color get indigo800 => Color(0XFF1C477E);
  Color get indigo900 => Color(0XFF0B3F81);

  // LightBlue
  Color get lightBlue200 => Color(0XFF80D6F7);
  Color get lightBlue900 => Color(0XFF185486);
  Color get lightBlue90001 => Color(0XFF064882);

  // Lime
  Color get lime50 => Color(0XFFF7F4E3);
  Color get lime700 => Color(0XFFCDA61D);

  // Orange
  Color get orange100 => Color(0XFFFCD9B9);
  Color get orange300 => Color(0XFFFFA95B);

  // Red
  Color get red100 => Color(0XFFFED4D9);
  Color get red200 => Color(0XFFC9AD90);
  Color get red300 => Color(0XFFB58960);
  Color get red30001 => Color(0XFFC9996A);
  Color get red30002 => Color(0XFFFF7070);
  Color get red400 => Color(0XFFED4844);
  Color get red40001 => Color(0XFFEE4353);
  Color get red40002 => Color(0XFFE85555);
  Color get red40003 => Color(0XFFEC5864);
  Color get red50 => Color(0XFFFDEDEF);
  Color get red500 => Color(0XFFE9433F);
  Color get red50001 => Color(0XFFF44336);
  Color get red50002 => Color(0XFFF43636);
  Color get red600 => Color(0XFFDA3636);
  Color get red60099 => Color(0X99E93D39);
  Color get red700 => Color(0XFFC23E3E);
  Color get red70001 => Color(0XFFE12626);
  Color get red70002 => Color(0XFFD52A25);
  Color get red70003 => Color(0XFFEA2222);
  Color get red800 => Color(0XFFCD2127);
  Color get red80001 => Color(0XFFBE3531);
  Color get red80002 => Color(0XFFBD3430);
  Color get red900 => Color(0XFF861818);
  Color get red90001 => Color(0XFFB21919);
  Color get redA200 => Color(0XFFF93C53);
  Color get redA20001 => Color(0XFFFF4848);
  Color get redA400 => Color(0XFFE51837);
  Color get redA70019 => Color(0X19FF0000);

  // Teal
  Color get teal300 => Color(0XFF5299BB);
  Color get teal400 => Color(0XFF25B286);
  Color get teal40001 => Color(0XFF1FBF8F);
  Color get teal50 => Color(0XFFDBE5EE);
  Color get teal500 => Color(0XFF1BA571);
  Color get teal5001 => Color(0XFFDAE7EF);
  Color get teal600 => Color(0XFF219B68);
  Color get teal700 => Color(0XFF13835B);
  Color get teal70001 => Color(0XFF13825B);
  Color get teal70002 => Color(0XFF15945E);
  Color get teal70003 => Color(0XFF158B67);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow900 => Color(0XFFE38025);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
